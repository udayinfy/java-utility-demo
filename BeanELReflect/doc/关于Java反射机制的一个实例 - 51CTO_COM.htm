<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0048)http://developer.51cto.com/art/200906/130411.htm -->
<HTML xmlns="http://www.w3.org/1999/xhtml"><HEAD><TITLE>关于Java反射机制的一个实例 - 51CTO.COM</TITLE>
<META http-equiv=Content-Type content="text/html; charset=gb2312">
<META http-equiv=x-ua-compatible content=ie=7>
<META content=本文向您展示Java反射机制的一个实例，该实例持简单EL的taglib，基本上实现了多级bean的属性的访问。 
name=description>
<META content=Java反射机制 name=keywords><LINK 
href="关于Java反射机制的一个实例%20-%2051CTO_COM_files/news_09.css" type=text/css 
rel=stylesheet><LINK href="关于Java反射机制的一个实例%20-%2051CTO_COM_files/master_top.css" 
type=text/css rel=stylesheet>
<SCRIPT language=javaScript 
src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/validate2.js"></SCRIPT>

<SCRIPT language=javaScript 
src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/fb_words_list.htm"></SCRIPT>

<SCRIPT language=javaScript 
src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/base6.js"></SCRIPT>

<SCRIPT language=javaScript 
src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/dialog_utf8.js"></SCRIPT>

<SCRIPT language=javaScript 
src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/mail.js"></SCRIPT>

<SCRIPT language=javascript 
src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/article.js"></SCRIPT>

<SCRIPT src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/index_1_down.js"></SCRIPT>

<SCRIPT>
var thistid=130411;
</SCRIPT>

<META content="MSHTML 6.00.6000.17080" name=GENERATOR></HEAD>
<BODY onresize=set_sreach() onload=set_sreach()>
<DIV class=top>
<DIV class=top_nav>
<DIV class=top_nav_logo title="51CTO.COM - 技术成就梦想 -  中国领先的IT技术网站"></DIV>
<DIV class=top_nav_r><A href="http://www.51cto.com/">51CTO首页</A> | <A 
href="http://news.51cto.com/">新闻</A> | <A 
href="http://www.51cto.com/col/35">专题</A> | <A 
href="http://bbs.51cto.com/">论坛</A> | <A href="http://blog.51cto.com/">博客</A> | 
<A href="http://down.51cto.com/">下载</A> | <A href="http://g.51cto.com/">技术圈</A> 
| <A href="http://book.51cto.com/">读书</A> | <A class=top_nav_r1 
onmouseover=show(1,this) onmouseout=popupClose() 
href="http://www.51cto.com/col/35/">技术频道 </A>| <A 
href="http://www.cioage.com/">CIO </A>| <A href="http://www.watchstor.com/">存储 
</A>| <A href="http://www.hc3i.cn/">HC3i </A>| <A 
href="http://www.51cto.com/about/map.htm">地图</A> </DIV></DIV></DIV>
<DIV class=subMenu1 id=s1 onmouseover=popupNoClose() onmouseout=popupClose()>
<UL>
  <LI><A href="http://network.51cto.com/">组网</A> 
  <LI><A href="http://netsecurity.51cto.com/">安全</A> 
  <LI><A href="http://developer.51cto.com/">开发</A> 
  <LI><A href="http://database.51cto.com/">数据库</A> 
  <LI><A href="http://server.51cto.com/">服务器</A> 
  <LI><A href="http://os.51cto.com/">系统</A> 
  <LI><A href="http://virtual.51cto.com/">虚拟化</A> 
  <LI><A href="http://cloud.51cto.com/">云计算</A> 
  <LI><A href="http://developer.51cto.com/embed/">嵌入式</A> </LI></UL></DIV>
<DIV class=subMenu1 id=s1 onmouseover=popupNoClose() onmouseout=popupClose()>
<UL>
  <LI><A href="http://network.51cto.com/">组网建网</A> 
  <LI><A href="http://netsecurity.51cto.com/">网络安全</A> 
  <LI><A href="http://server.51cto.com/">服务器</A> 
  <LI><A href="http://os.51cto.com/">操作系统</A> 
  <LI><A href="http://virtual.51cto.com/">虚拟化</A> 
  <LI><A href="http://developer.51cto.com/">开发</A></LI></UL></DIV>
<DIV class=subMenu2 id=s2 onmouseover=popupNoClose( onmouseout=popupClose() )>
<UL>
  <LI><A href="http://www.cioage.com/news">资讯前沿</A> 
  <LI><A href="http://www.cioage.com/insight">业界观察</A> 
  <LI><A href="http://www.cioage.com/exp">应用体验</A> 
  <LI><A href="http://www.cioage.com/tech">杀手技术</A></LI></UL></DIV>
<DIV class=subMenu3 id=s3 onmouseover=popupNoClose() onmouseout=popupClose()>
<UL>
  <LI><A href="http://news.watchstor.com/">新闻资讯</A> 
  <LI><A href="http://tech.watchstor.com/">技术中心</A> 
  <LI><A href="http://video.watchstor.com/">互动视频</A> 
  <LI><A href="http://special.watchstor.com/">专题汇聚</A></LI></UL></DIV>
<DIV class=BR_8></DIV>
<DIV class=banner>
<DIV class=banner_l id=tonglanad></DIV>
<DIV class=banner_r>
<UL>
  <LI id=wordlinkad1>
  <LI id=wordlinkad2>
  <LI id=wordlinkad3>
  <LI id=wordlinkad4></LI></UL></DIV></DIV>
<DIV class=BR_8></DIV>
<DIV id=subNav>
<DIV class=subNav_logo><IMG 
src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/kaifa_logo.gif"></DIV>
<DIV class=subNav_l><A href="http://developer.51cto.com/">首页</A> | <A 
href="http://developer.51cto.com/java/">Java</A> | <A 
href="http://developer.51cto.com/net/">.NET</A> | <A 
href="http://developer.51cto.com/web/">Web</A> | <A 
href="http://developer.51cto.com/col/1315/">XML</A> | <A 
href="http://developer.51cto.com/col/585/">语言工具</A> | <A 
href="http://developer.51cto.com/col/1312/">测试</A> | <A 
href="http://developer.51cto.com/col/1314/" target=_blank>游戏</A> | <A 
href="http://developer.51cto.com/col/583/" target=_blank>移动</A> | <A 
href="http://developer.51cto.com/col/1308/">架构</A> | <A 
href="http://developer.51cto.com/col/586/">项目管理</A> | <A 
href="http://publish.51cto.com/list/460/">全部文章</A></DIV>
<DIV class=search>
<FORM 
style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-TOP: 0px" 
name=searchform action=http://www.51cto.com/php/search.php method=post>
<DL>
  <DT><INPUT class=new_te1 name=keyword> </DT>
  <DD><INPUT type=image 
  src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/search.gif"></DD></DL></FORM></DIV></DIV>
<DIV class=BR_10></DIV>
<DIV id=container>
<DIV id=left>
<DIV class=title>
<DIV class=breadcrumb>您所在的位置：<A href="http://www.51cto.com/" 
target=_blank>首页</A> &gt; <A href="http://developer.51cto.com/">开发</A> &gt; <A 
href="http://developer.51cto.com/col/461/">Java</A> &gt; <A 
href="http://developer.51cto.com/col/1005/">Java基础</A> &gt; </DIV>
<DIV class=con>
<UL>
  <LI>
  <H1>关于Java反射机制的一个实例</H1>
  <LI class=msg><SPAN><A 
  href="http://developer.51cto.com/">http://developer.51cto.com/</A> 
  &nbsp;2009-06-19 13:59 &nbsp;abruzzi &nbsp;javaeye &nbsp;<A 
  href="http://www.51cto.com/php/feedbackt.php?id=130411">我要评论(<SPAN 
  id=pinglun_1>0</SPAN>)</A></SPAN> </LI></UL></DIV></DIV>
<DIV class=BR_3></DIV>
<DIV class=container>
<DIV class=sum>
<UL 
class=summary>本文向您展示Java反射机制的一个实例，该实例持简单EL的taglib，基本上实现了多级bean的属性的访问。</UL></DIV>
<UL class=con>
  <P>
  <P>JSP的规范中，有个表达式语言(Expression Language, 简称EL)，可以算是一个微型的语言，其中对request, page, 
  session, 
  application中预存的JavaBean对象的引用方式很是简单。最近正好需要写一个支持简单EL的taglib，所以就研究了下Java反射机制，目前基本上实现了多级bean的属性的访问，经测试，还是可以用的。如：</P><PRE><OL class=dp-j><LI class=alt><SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>static</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>void</SPAN><SPAN>&nbsp;main(String[]&nbsp;args){ &nbsp;</SPAN></SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;UserBean&nbsp;bean&nbsp;=&nbsp;</SPAN><SPAN class=keyword>new</SPAN><SPAN>&nbsp;UserBean(); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;bean.setName(</SPAN><SPAN class=string>"John&nbsp;Abruzzi"</SPAN><SPAN>); &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;bean.setNick(</SPAN><SPAN class=string>"Abruzzi"</SPAN><SPAN>); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;bean.setAge(</SPAN><SPAN class=number>24</SPAN><SPAN>); &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;AddressBean&nbsp;addr&nbsp;=&nbsp;</SPAN><SPAN class=keyword>new</SPAN><SPAN>&nbsp;AddressBean(); &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;addr.setZip(</SPAN><SPAN class=string>"0086"</SPAN><SPAN>); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;addr.setStreet(</SPAN><SPAN class=string>"Bell&nbsp;Street&nbsp;#12"</SPAN><SPAN>); &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;bean.setAddress(addr); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(BeanParser.doParse(bean,&nbsp;</SPAN><SPAN class=string>"bean.address.street"</SPAN><SPAN>)); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(BeanParser.doParse(bean,&nbsp;</SPAN><SPAN class=string>"bean.address.zip"</SPAN><SPAN>)); &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(BeanParser.doParse(bean,&nbsp;</SPAN><SPAN class=string>"bean.name"</SPAN><SPAN>)); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(BeanParser.doParse(bean,&nbsp;</SPAN><SPAN class=string>"bean.nick"</SPAN><SPAN>)); &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(BeanParser.doParse(bean,&nbsp;</SPAN><SPAN class=string>"bean.age"</SPAN><SPAN>)); &nbsp;</SPAN><LI class=alt><SPAN>}&nbsp;</SPAN></LI></OL></PRE>
  <P>需要可以输出：</P><PRE><OL class=dp-j><LI class=alt><SPAN><SPAN>Bell&nbsp;Street&nbsp;#</SPAN><SPAN class=number>12</SPAN><SPAN>&nbsp;</SPAN></SPAN><LI><SPAN class=number>0086</SPAN><SPAN>&nbsp;</SPAN><LI class=alt><SPAN>John&nbsp;Abruzzi &nbsp;</SPAN><LI><SPAN>Abruzzi &nbsp;</SPAN><LI class=alt><SPAN class=number>24</SPAN><SPAN>&nbsp;</SPAN></LI></OL></PRE>
  <P>反射，即由一个抽象的对象(如Object)，取出这个具体对象的属性或者方法(就EL中关于Bean的引用来说，这个定义已经够了)。在EL中，对一个Bean的某字段进行引用，只需 
  ${bean.field}，当然，这个bean是已经被set到容器中的，这就是Java反射机制。</P>
  <P>我们从容器中取出以bean为名字的Object，通过Java反射机制知道它的真实类型，然后通过field以javabean规范拼出方法名，进行调用，如果这个表达式是多级的，如${bean.field.field}，其中第一个field本身就是一个bean对象，同样需要递归的进行解析。</P>
  <P>大概原理就是这些了，看代码吧：</P>
  <P>现有一个UserBean, 其中的一个字段Address本身又是一个AddressBean。</P><PRE><OL class=dp-j><LI class=alt><SPAN><SPAN class=keyword>package</SPAN><SPAN>&nbsp;elparser; &nbsp;</SPAN></SPAN><LI><SPAN>&nbsp;</SPAN><LI class=alt><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>class</SPAN><SPAN>&nbsp;AddressBean&nbsp;{ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>private</SPAN><SPAN>&nbsp;String&nbsp;street; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>private</SPAN><SPAN>&nbsp;String&nbsp;zip; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;String&nbsp;getZip()&nbsp;{ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>return</SPAN><SPAN>&nbsp;zip; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI><SPAN>&nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>void</SPAN><SPAN>&nbsp;setZip(String&nbsp;zip)&nbsp;{ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>this</SPAN><SPAN>.zip&nbsp;=&nbsp;zip; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI><SPAN>&nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;String&nbsp;getStreet()&nbsp;{ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>return</SPAN><SPAN>&nbsp;street; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI><SPAN>&nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>void</SPAN><SPAN>&nbsp;setStreet(String&nbsp;street)&nbsp;{ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>this</SPAN><SPAN>.street&nbsp;=&nbsp;street; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI class=alt><SPAN>}&nbsp;</SPAN></LI></OL></PRE>
  <P>然后是UserBean</P><PRE><OL class=dp-j><LI class=alt><SPAN><SPAN class=keyword>package</SPAN><SPAN>&nbsp;elparser; &nbsp;</SPAN></SPAN><LI><SPAN>&nbsp;</SPAN><LI class=alt><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>class</SPAN><SPAN>&nbsp;UserBean&nbsp;{ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>private</SPAN><SPAN>&nbsp;String&nbsp;name; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>private</SPAN><SPAN>&nbsp;String&nbsp;nick; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>private</SPAN><SPAN>&nbsp;AddressBean&nbsp;address; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>private</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>int</SPAN><SPAN>&nbsp;age; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>int</SPAN><SPAN>&nbsp;getAge(){ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>return</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>this</SPAN><SPAN>.age; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>void</SPAN><SPAN>&nbsp;setAge(</SPAN><SPAN class=keyword>int</SPAN><SPAN>&nbsp;age){ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>this</SPAN><SPAN>.age&nbsp;=&nbsp;age; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;String&nbsp;getName()&nbsp;{ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>return</SPAN><SPAN>&nbsp;name; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>void</SPAN><SPAN>&nbsp;setName(String&nbsp;name)&nbsp;{ &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>this</SPAN><SPAN>.name&nbsp;=&nbsp;name; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;String&nbsp;getNick()&nbsp;{ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>return</SPAN><SPAN>&nbsp;nick; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>void</SPAN><SPAN>&nbsp;setNick(String&nbsp;nick)&nbsp;{ &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>this</SPAN><SPAN>.nick&nbsp;=&nbsp;nick; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;AddressBean&nbsp;getAddress()&nbsp;{ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>return</SPAN><SPAN>&nbsp;address; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>void</SPAN><SPAN>&nbsp;setAddress(AddressBean&nbsp;address)&nbsp;{ &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>this</SPAN><SPAN>.address&nbsp;=&nbsp;address; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI class=alt><SPAN>}&nbsp;</SPAN></LI></OL></PRE>
  <P>Bean都是很简单的，考虑到对基本类型的支持，所以在UserBean中加入一个int型的字段age</P>
  <P>好了，看看怎么通过一个串和一个对象来取出其中的字段来：</P><PRE><OL class=dp-j><LI class=alt><SPAN><SPAN class=keyword>package</SPAN><SPAN>&nbsp;elparser; &nbsp;</SPAN></SPAN><LI><SPAN>&nbsp;</SPAN><LI class=alt><SPAN class=keyword>import</SPAN><SPAN>&nbsp;java.lang.reflect.Method; &nbsp;</SPAN><LI><SPAN>&nbsp;</SPAN><LI class=alt><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>class</SPAN><SPAN>&nbsp;BeanParser&nbsp;{ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>private</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>static</SPAN><SPAN>&nbsp;String&nbsp;getMethodName(String&nbsp;property,&nbsp;String&nbsp;prefix){ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;prop&nbsp;=&nbsp;Character.toUpperCase(property.charAt(</SPAN><SPAN class=number>0</SPAN><SPAN>))+property.substring(</SPAN><SPAN class=number>1</SPAN><SPAN>); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;methodName&nbsp;=&nbsp;prefix&nbsp;+&nbsp;prop; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>return</SPAN><SPAN>&nbsp;methodName; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>private</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>static</SPAN><SPAN>&nbsp;Object&nbsp;parse(Object&nbsp;bean,&nbsp;String&nbsp;expr){ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class&nbsp;beanClass&nbsp;=&nbsp;bean.getClass(); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method&nbsp;method&nbsp;=&nbsp;</SPAN><SPAN class=keyword>null</SPAN><SPAN>; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object&nbsp;result&nbsp;=&nbsp;</SPAN><SPAN class=keyword>null</SPAN><SPAN>; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>try</SPAN><SPAN>{ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=comment>//这两步是关键，get方法不需要传入参数，所以只是new出两个空数组传入 </SPAN><SPAN>&nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method&nbsp;=&nbsp;beanClass.getMethod(getMethodName(expr,&nbsp;</SPAN><SPAN class=string>"get"</SPAN><SPAN>),&nbsp;</SPAN><SPAN class=keyword>new</SPAN><SPAN>&nbsp;Class[]{}); &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;method.invoke(bean,&nbsp;</SPAN><SPAN class=keyword>new</SPAN><SPAN>&nbsp;Object[]{}); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</SPAN><SPAN class=keyword>catch</SPAN><SPAN>(Exception&nbsp;e){ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(e.getMessage()); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>return</SPAN><SPAN>&nbsp;result; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>static</SPAN><SPAN>&nbsp;Object&nbsp;doParse(Object&nbsp;bean,&nbsp;String&nbsp;expr){ &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;keys[]&nbsp;=&nbsp;expr.split(</SPAN><SPAN class=string>"\\."</SPAN><SPAN>); &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object&nbsp;obj&nbsp;=&nbsp;</SPAN><SPAN class=keyword>null</SPAN><SPAN>; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>for</SPAN><SPAN>(</SPAN><SPAN class=keyword>int</SPAN><SPAN>&nbsp;i&nbsp;=&nbsp;</SPAN><SPAN class=number>1</SPAN><SPAN>;&nbsp;i&nbsp;&lt;&nbsp;keys.length;i++){ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj&nbsp;=&nbsp;parse(bean,&nbsp;keys[i]); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bean&nbsp;=&nbsp;obj; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</SPAN><SPAN class=comment>//递归parse </SPAN><SPAN>&nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>return</SPAN><SPAN>&nbsp;obj; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN class=keyword>public</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>static</SPAN><SPAN>&nbsp;</SPAN><SPAN class=keyword>void</SPAN><SPAN>&nbsp;main(String[]&nbsp;args){ &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UserBean&nbsp;bean&nbsp;=&nbsp;</SPAN><SPAN class=keyword>new</SPAN><SPAN>&nbsp;UserBean(); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bean.setName(</SPAN><SPAN class=string>"John&nbsp;Abruzzi"</SPAN><SPAN>); &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bean.setNick(</SPAN><SPAN class=string>"Abruzzi"</SPAN><SPAN>); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bean.setAge(</SPAN><SPAN class=number>24</SPAN><SPAN>); &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AddressBean&nbsp;addr&nbsp;=&nbsp;</SPAN><SPAN class=keyword>new</SPAN><SPAN>&nbsp;AddressBean(); &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr.setZip(</SPAN><SPAN class=string>"0086"</SPAN><SPAN>); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr.setStreet(</SPAN><SPAN class=string>"Bell&nbsp;Street&nbsp;#12"</SPAN><SPAN>); &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bean.setAddress(addr); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(BeanParser.doParse(bean,&nbsp;</SPAN><SPAN class=string>"bean.address.street"</SPAN><SPAN>)); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(BeanParser.doParse(bean,&nbsp;</SPAN><SPAN class=string>"bean.address.zip"</SPAN><SPAN>)); &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(BeanParser.doParse(bean,&nbsp;</SPAN><SPAN class=string>"bean.name"</SPAN><SPAN>)); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(BeanParser.doParse(bean,&nbsp;</SPAN><SPAN class=string>"bean.nick"</SPAN><SPAN>)); &nbsp;</SPAN><LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(BeanParser.doParse(bean,&nbsp;</SPAN><SPAN class=string>"bean.age"</SPAN><SPAN>)); &nbsp;</SPAN><LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;</SPAN><LI><SPAN>}&nbsp;</SPAN></LI></OL></PRE>
  <P>代码比较简短，重要部分有注释，应该很容易理解。当然这篇文章主要是关于Java的反射机制，如果需要对EL完全支持，可以使用JavaCC做一个简单的分析器(Apache的commons中包含一个el的项目，就是用javacc写的分析器)。</P>
  <P>【编辑推荐】</P>
  <OL>
    <LI><A 
    href="http://developer.51cto.com/art/200906/130406.htm">在Java应用程序中使用Jfreechart配置</A> 

    <LI><A 
    href="http://developer.51cto.com/art/200906/130403.htm">Java程序员学习Flex和BlazeDS的十三个理由</A> 

    <LI><A 
    href="http://developer.51cto.com/art/200906/130396.htm">用JavaFX编写用户界面控制器</A> 

    <LI><A href="http://developer.51cto.com/art/200906/130365.htm">Java 
    WEB开发中的中文乱码问题解决 </A>
    <LI><A href="http://developer.51cto.com/art/200906/130362.htm">总结Java 
    Web中几个函数的作用 </A></LI></OL>
  <DIV align=right>【责任编辑：<A class=ln href="mailto:liusn@51cto.com">red7</A> 
  TEL：（010）68476606】</DIV><BR></UL>
<DIV class=BR_20></DIV>
<DIV class=zhus>
<DL>
  <DT>原文：<A 
  href="http://developer.51cto.com/art/200906/130411.htm">关于Java反射机制的一个实例</A> 
  </DT>
  <DD>标 签：&nbsp;&nbsp;<A 
  href="http://www.51cto.com/php/search.php?keyword=Java%B7%B4%C9%E4%BB%FA%D6%C6" 
  target=_blank>Java反射机制</A> </DD></DL></DIV>
<DIV class=lij><SPAN>上一篇： <A 
href="http://developer.51cto.com/art/200906/130406.htm" 
target=_self>在Java应用程序中使用Jfreechart配置</A> 下一篇： <A 
href="http://developer.51cto.com/art/200906/130414.htm" 
target=_self>深入理解Java多态性</A></SPAN></DIV></DIV>
<DIV class=BR_8></DIV>
<DIV class=review>
<DIV class=tit>
<H3>网友评论</H3><SPAN><A 
href="http://www.51cto.com/php/feedbackt.php?id=130411">查看所有评论（<EM 
id=pinglun_2></EM>）</A></SPAN></DIV>
<DIV id=artcomments>
<SCRIPT src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/artcomment0910.htm"></SCRIPT>
</DIV>
<DIV class=con1>
<DIV class=sp1>
<SCRIPT src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/authart.htm"></SCRIPT>
</DIV>
<SCRIPT src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/developer.htm"></SCRIPT>
</DIV></DIV>
<DIV class=BR_8></DIV>
<DIV class=mary>
<UL class=le1>
  <OL class=tit>读 书</OL>
  <LI><A title=嵌入式Linux内存使用与性能优化 
  href="http://book.51cto.com/art/200907/135953.htm">嵌入式Linux内存使用与性能优化</A> 
  <LI><A title=Spring攻略 
  href="http://book.51cto.com/art/200908/142736.htm">Spring攻略</A> 
  <LI><A title=数据仓库生命周期工具箱(第二版) 
  href="http://book.51cto.com/art/200910/157058.htm">数据仓库生命周期工具箱(第二版)</A> 
  <LI><A title=网络光芒――中国互联网的力量与信心 
  href="http://book.51cto.com/art/200910/159683.htm">网络光芒――中国互联网的力量与信心</A> 
  <LI><A title="Google Android SDK开发范例大全" 
  href="http://book.51cto.com/art/200907/140317.htm">Google Android 
  SDK开发范例大全</A> </LI></UL>
<UL class=le2>
  <OL class=tit>论 坛</OL>
  <LI><A title=SAN技术资料PPT03 href="http://bbs.51cto.com/thread-56316-1.html" 
  target=_blank>SAN技术资料PPT03</A>
  <LI><A title=SAN技术资料PPT href="http://bbs.51cto.com/thread-56302-1.html" 
  target=_blank>SAN技术资料PPT</A>
  <LI><A title=SAN技术资料PPT href="http://bbs.51cto.com/thread-56275-1.html" 
  target=_blank>SAN技术资料PPT</A>
  <LI><A title=iSCSI技术白皮书 href="http://bbs.51cto.com/thread-56223-1.html" 
  target=_blank>iSCSI技术白皮书</A>
  <LI><A title=SATA技术介绍 href="http://bbs.51cto.com/thread-56222-1.html" 
  target=_blank>SATA技术介绍</A> </LI></UL>
<DIV class=BR_line></DIV>
<UL class=le1>
  <OL class=tit>博 客</OL>
  <LI><A title="建立快捷方式的函数: CreateShortcut - 非常实用、特别方便 " 
  href="http://zsqztg.blog.51cto.com/601880/169853/" target=_blank>建立快捷方式的函数: 
  CreateShortcu..</A>
  <LI><A title=缘――致友人 href="http://tigergolf.blog.51cto.com/816794/169847/" 
  target=_blank>缘――致友人</A>
  <LI><A title="Reiserfs 文件系统不能使用lsattr？" 
  href="http://jianjian.blog.51cto.com/35031/169844/" target=_blank>Reiserfs 
  文件系统不能使用lsattr？</A>
  <LI><A title="RH033 [1]" href="http://jueshitou.blog.51cto.com/385947/169843/" 
  target=_blank>RH033 [1]</A>
  <LI><A title=在Linux下创建镜像文件 href="http://cyr520.blog.51cto.com/714067/169842/" 
  target=_blank>在Linux下创建镜像文件</A> </LI></UL>
<UL class=le2>
  <OL class=tit>下 载</OL>
  <LI><A title=PHP实用资料小集合 href="http://down.51cto.com/data/53019/" 
  target=_blank>PHP实用资料小集合</A>
  <LI><A title=102种常用JS源代码文件打包下载 href="http://down.51cto.com/data/53018/" 
  target=_blank>102种常用JS源代码文件打包下载</A>
  <LI><A title=中科院培训资料（软件系统架构师） href="http://down.51cto.com/data/53017/" 
  target=_blank>中科院培训资料（软件系统架构师）</A>
  <LI><A title=基于CS的简单聊天系统 href="http://down.51cto.com/data/53016/" 
  target=_blank>基于CS的简单聊天系统</A>
  <LI><A title=2010计算机考研大纲及名师解析（含样题） href="http://down.51cto.com/data/53015/" 
  target=_blank>2010计算机考研大纲及名师解析（含..</A> </LI></UL>
<DIV class=BR></DIV></DIV></DIV>
<DIV id=right>
<DIV class=hot>
<UL>
  <LI class=tit><EM>关注</EM> <A 
  href="http://developer.51cto.com/developer/qiyuan/">年终巨献：开发高手的物种起源</A> 
  <LI class=con>
  <DL>
    <DT><A href="http://developer.51cto.com/developer/qiyuan/"><IMG 
    src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/095910688.jpg" border=0></A> 
</DT>
    <DD>究竟高手是如何炼成的？让我们一起回到原点，探寻开发高手的物种起源 </DD></DL></LI></UL></DIV>
<DIV class=bann id=MyMoveAd 
style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; OVERFLOW: hidden; WIDTH: 300px; PADDING-TOP: 0px; HEIGHT: 1px">
<SCRIPT language=JavaScript 
src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/ad.js"></SCRIPT>
</DIV>
<DIV class=top10>
<DIV class=tab><A id=top_1 onmouseover=change_top10(1);>24小时</A><A id=top_2 
onmouseover=change_top10(2);>本周</A><A id=top_3 
onmouseover=change_top10(3);>本月</A></DIV>
<DIV class=list id=top10_1 style="DISPLAY: block">
<UL>
  <LI><A title="Android抄袭Java代码出新证 谷歌新CEO如何应对？" 
  href="http://developer.51cto.com/art/201101/243835.htm" 
  target=_blank>Android抄袭Java代码出新证 谷歌新CEO如何应对？</A> </LI>
  <LI><A title="Eclipse插件大全 挑选最牛的TOP30" 
  href="http://developer.51cto.com/art/201007/214478.htm" 
  target=_blank>Eclipse插件大全 挑选最牛的TOP30</A> </LI>
  <LI><A title="代替桌面工具 10款最给力的Web开发与设计工具" 
  href="http://developer.51cto.com/art/201101/242579.htm" target=_blank>代替桌面工具 
  10款最给力的Web开发与设计工具</A> </LI>
  <LI><A title=10款给力构建易用性网站的jQuery插件 
  href="http://developer.51cto.com/art/201101/243852.htm" 
  target=_blank>10款给力构建易用性网站的jQuery插件</A> </LI>
  <LI><A title="程序员的十个层次 你属于哪一层？" 
  href="http://developer.51cto.com/art/201011/233083.htm" target=_blank>程序员的十个层次 
  你属于哪一层？</A> </LI>
  <LI><A title="多图详解教程：Eclipse 3.6连接Tomcat 7" 
  href="http://developer.51cto.com/art/201007/212405.htm" 
  target=_blank>多图详解教程：Eclipse 3.6连接Tomcat 7</A> </LI>
  <LI><A title=Google首席Java架构师谈数学与程序员的关系 
  href="http://developer.51cto.com/art/201012/238798.htm" 
  target=_blank>Google首席Java架构师谈数学与程序员的关系</A> </LI>
  <LI><A title=JavaScript初学者应注意的七个细节 
  href="http://developer.51cto.com/art/201101/242546.htm" 
  target=_blank>JavaScript初学者应注意的七个细节</A> </LI>
  <LI><A title=2011年1月编程语言排行榜：Python称霸2010 
  href="http://developer.51cto.com/art/201101/242327.htm" 
  target=_blank>2011年1月编程语言排行榜：Python称霸2010</A> </LI>
  <LI><A title=详解Java解析XML的四种方法 
  href="http://developer.51cto.com/art/200903/117512.htm" 
  target=_blank>详解Java解析XML的四种方法</A> </LI></UL></DIV>
<DIV class=list id=top10_2 style="DISPLAY: none">
<UL>
  <LI><A title="Android抄袭Java代码出新证 谷歌新CEO如何应对？" 
  href="http://developer.51cto.com/art/201101/243835.htm" 
  target=_blank>Android抄袭Java代码出新证 谷歌新CEO如何应对？</A> </LI>
  <LI><A title="HTML效仿Chrome浏览器 将不再有版本号" 
  href="http://developer.51cto.com/art/201101/243813.htm" 
  target=_blank>HTML效仿Chrome浏览器 将不再有版本号</A> </LI>
  <LI><A title="HTML5迎来新Logo 成下一代Web标准无容置疑" 
  href="http://developer.51cto.com/art/201101/243420.htm" 
  target=_blank>HTML5迎来新Logo 成下一代Web标准无容置疑</A> </LI>
  <LI><A title=9大最有潜力PHP开源项目:Android开发居首 
  href="http://developer.51cto.com/art/201101/243552.htm" 
  target=_blank>9大最有潜力PHP开源项目:Android开发居首</A> </LI>
  <LI><A title=是什么让一个Web应用程序变得如此伟大？ 
  href="http://developer.51cto.com/art/201101/243540.htm" 
  target=_blank>是什么让一个Web应用程序变得如此伟大？</A> </LI>
  <LI><A title=jQuery1.5的六大细节改进:DOM操作更简单 
  href="http://developer.51cto.com/art/201101/243424.htm" 
  target=_blank>jQuery1.5的六大细节改进:DOM操作更简单</A> </LI>
  <LI><A title="10个超赞超实用的免费jQuery图片插件 附下载" 
  href="http://developer.51cto.com/art/201101/243701.htm" 
  target=_blank>10个超赞超实用的免费jQuery图片插件 附下载</A> </LI>
  <LI><A title=2011年5大科技预言：平板电脑昙花一现 
  href="http://developer.51cto.com/art/201101/243698.htm" 
  target=_blank>2011年5大科技预言：平板电脑昙花一现</A> </LI>
  <LI><A title=微软轻量级Web服务器将提供免费版 
  href="http://developer.51cto.com/art/201101/243305.htm" 
  target=_blank>微软轻量级Web服务器将提供免费版</A> </LI>
  <LI><A title="Scala获欧盟资助 以克服并行编程的困难" 
  href="http://developer.51cto.com/art/201101/243487.htm" 
  target=_blank>Scala获欧盟资助 以克服并行编程的困难</A> </LI></UL></DIV>
<DIV class=list id=top10_3 style="DISPLAY: none">
<UL>
  <LI><A title=2011年1月编程语言排行榜：Python称霸2010 
  href="http://developer.51cto.com/art/201101/242327.htm" 
  target=_blank>2011年1月编程语言排行榜：Python称霸2010</A> </LI>
  <LI><A title="代替桌面工具 10款最给力的Web开发与设计工具" 
  href="http://developer.51cto.com/art/201101/242579.htm" target=_blank>代替桌面工具 
  10款最给力的Web开发与设计工具</A> </LI>
  <LI><A title=15个国外最流行的CSS框架（附下载） 
  href="http://developer.51cto.com/art/201101/241626.htm" 
  target=_blank>15个国外最流行的CSS框架（附下载）</A> </LI>
  <LI><A title=3种类型的程序员：“虫族”，“人族”，“神族” 
  href="http://developer.51cto.com/art/201012/240844.htm" 
  target=_blank>3种类型的程序员：“虫族”，“人族”，“神族”</A> </LI>
  <LI><A title="10个国外开发的HTML 5精彩应用" 
  href="http://developer.51cto.com/art/201012/240884.htm" 
  target=_blank>10个国外开发的HTML 5精彩应用</A> </LI>
  <LI><A title="Android抄袭Java代码出新证 谷歌新CEO如何应对？" 
  href="http://developer.51cto.com/art/201101/243835.htm" 
  target=_blank>Android抄袭Java代码出新证 谷歌新CEO如何应对？</A> </LI>
  <LI><A title=JavaScript初学者应注意的七个细节 
  href="http://developer.51cto.com/art/201101/242546.htm" 
  target=_blank>JavaScript初学者应注意的七个细节</A> </LI>
  <LI><A title=年度最热门SNS开源系统出炉（附下载） 
  href="http://developer.51cto.com/art/201012/240705.htm" 
  target=_blank>年度最热门SNS开源系统出炉（附下载）</A> </LI>
  <LI><A title=2011年Web设计最新潮流（图文） 
  href="http://developer.51cto.com/art/201101/242117.htm" 
  target=_blank>2011年Web设计最新潮流（图文）</A> </LI>
  <LI><A title=Java专家孙卫琴：专精一门编程语言也能成功 
  href="http://developer.51cto.com/art/201101/243013.htm" 
  target=_blank>Java专家孙卫琴：专精一门编程语言也能成功</A> </LI></UL></DIV></DIV>
<DIV class=BR_10></DIV>
<DIV class=tag>
<DIV class=con><A title=刀片服务器专区 href="http://server.51cto.com/Blade" 
target=_blank>刀片服务器</A>&nbsp;&nbsp; <A title=云计算频道全新上线 
href="http://cloud.51cto.com/" target=_blank>云计算</A>&nbsp;&nbsp; <A 
title=ARP攻击与防御 href="http://netsecurity.51cto.com/art/200609/31897.htm" 
target=_blank>ARP攻防</A>&nbsp;&nbsp; <A title=思科培训技术专区 
href="http://training.51cto.com/cisco" 
target=_blank>思科培训</A>&nbsp;&nbsp;</DIV></DIV>
<DIV class=BR_10></DIV>
<DIV class=dingy>
<TABLE cellSpacing=0 cellPadding=0 width=280 border=0>
  <TBODY>
  <TR>
    <TD colSpan=2 height=56>&nbsp;</TD></TR>
  <TR>
    <TD align=right colSpan=2><A 
      href="http://news.51cto.com/col/1323/">点击这里查看样刊</A></TD></TR>
  <TR>
    <TD colSpan=2>&nbsp;</TD></TR>
  <TR>
    <FORM onsubmit="return mail_process(email.value)" 
    action=http://newsletter2.51cto.com/new/newsletter/mailm.php method=post>
    <TD align=right width=223><INPUT class=new_te5 onfocus=this.select() 
      onclick="this.value=''" name=email><INPUT type=hidden name=mailsub></TD>
    <TD align=right width=57><INPUT onclick=submit(); type=image 
      src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/dingy.gif"></TD></FORM></TR></TBODY></TABLE></DIV>
<DIV class=BR_10></DIV>
<DIV class=redian>
<DIV class=list>
<UL>
  <LI><A title=8月病毒排行榜：Netsky重返老大位置 
  href="http://netsecurity.51cto.com/art/200509/2423.htm">8月病毒排行榜：Netsky重返老大位置</A> 
  </LI>
  <LI><A title=微软推出AJAX测试版:Atlas（ASP.Net） 
  href="http://developer.51cto.com/art/200611/34010.htm">微软推出AJAX测试版:Atlas（ASP.Net）</A> 
  </LI>
  <LI><A title=如何保持Oracle数据库的优良性能 
  href="http://database.51cto.com/art/200508/896.htm">如何保持Oracle数据库的优良性能</A> 
  </LI>
  <LI><A title="Squid Proxy SSL连接超时拒绝远程服务漏洞" 
  href="http://netsecurity.51cto.com/art/200509/2360.htm">Squid Proxy 
  SSL连接超时拒绝远程服务漏洞</A> </LI>
  <LI><A title=".NET 2.0里强类型数据创建多层应用" 
  href="http://developer.51cto.com/art/200602/20310.htm">.NET 
  2.0里强类型数据创建多层应用</A> </LI>
  <LI><A title=路由器与集线器、交换机的根本区别 
  href="http://network.51cto.com/art/200510/9503.htm">路由器与集线器、交换机的根本区别</A> </LI>
  <LI><A title=日本超宽带推广方案提前 
  href="http://news.51cto.com/art/200508/2095.htm">日本超宽带推广方案提前</A> </LI>
  <LI><A title=网管员心声：Windows服务有“备”无患 
  href="http://sysapp.51cto.com/art/200508/1488.htm">网管员心声：Windows服务有“备”无患</A> 
  </LI>
  <LI><A title=MandrakeLinux-Gnumeric包整数溢出漏洞 
  href="http://netsecurity.51cto.com/art/200508/2085.htm">MandrakeLinux-Gnumeric包整数溢出漏洞</A> 
  </LI>
  <LI><A title=milw0rm黑客十年回顾：曾以和平目的侵入印度核研究所 
  href="http://netsecurity.51cto.com/art/200907/135861.htm">milw0rm黑客十年回顾：曾以和平目的侵入印..</A> 
  </LI></UL></DIV></DIV>
<DIV class=BR_10></DIV><IFRAME class=bann 
style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; OVERFLOW: hidden; WIDTH: 300px; PADDING-TOP: 0px; HEIGHT: 250px; BACKGROUND-COLOR: #dbdbdb" 
src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/4.htm" frameBorder=0 
scrolling=no></IFRAME>
<DIV class=BR_10></DIV></DIV>
<DIV class=BR></DIV></DIV>
<DIV class=BR_20></DIV>
<DIV id=foot>
<SCRIPT src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/copy_right.js"></SCRIPT>
</DIV><!--弹出窗口-->
<DIV id=tanc style="DISPLAY: none; LEFT: 0px; TOP: 0px; BACKGROUND-COLOR: #fff">
<DIV class=tit>
<DL>
  <DT>更多关于“<SPAN id=search_title></SPAN>”的推荐</DT>
  <DD><IMG onclick=close_this(); 
  src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/ico2.gif"></DD></DL></DIV>
<DIV class=con>
<OL>51CTO还有以下内容可能满足您的需求</OL>
<UL id=search_body></UL><SPAN><A id=search_url 
href="http://developer.51cto.com/art/200906/130411.htm#">站内搜索更多 <EM 
id=search_foot></EM>的内容</A></SPAN></DIV></DIV><!--弹出窗口End--><!-- 新监测代码 -->
<SCRIPT type=text/javascript>
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</SCRIPT>

<SCRIPT type=text/javascript>
try {
var pageTracker = _gat._getTracker("UA-10766765-6");
pageTracker._trackPageview();
} catch(err) {}</SCRIPT>

<DIV style="DISPLAY: none">
<SCRIPT type=text/javascript>
var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F6d49a084fadc0a02616d836ba8b4a72e' type='text/javascript'%3E%3C/script%3E"));
</SCRIPT>

<SCRIPT src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/tongji.js" 
type=text/javascript></SCRIPT>
<NOSCRIPT><A href="http://www.linezing.com/"><IMG 
src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/tongji.gif"></A></NOSCRIPT> </DIV><!-- 新监测代码 -->
<DIV style="DISPLAY: none"><SPAN id=wordlink_1>
<SCRIPT src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/wordlink1.js"></SCRIPT>
</SPAN><SPAN id=wordlink_2>
<SCRIPT src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/wordlink2.js"></SCRIPT>
</SPAN><SPAN id=wordlink_3>
<SCRIPT src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/wordlink3.js"></SCRIPT>
</SPAN><SPAN id=wordlink_4>
<SCRIPT src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/wordlink4.js"></SCRIPT>
</SPAN><SPAN id=pinglun>
<SCRIPT language=JavaScript 
src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/getArtCount.htm"></SCRIPT>
</SPAN>
<SCRIPT src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/ad(1).js"></SCRIPT>
<SPAN id=tonglan>
<SCRIPT language=JavaScript 
src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/ad(2).js"></SCRIPT>
</SPAN><SPAN id=wordlink>
<SCRIPT language=JavaScript 
src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/ad(1).js"></SCRIPT>
</SPAN></DIV>
<SCRIPT>
	document.getElementById('pinglun_1').innerHTML = document.getElementById("pinglun").innerHTML;
	document.getElementById('pinglun_2').innerHTML = document.getElementById("pinglun").innerHTML;
	document.getElementById('tonglanad').innerHTML=document.getElementById('tonglan').innerHTML;
    document.getElementById('tonglan').innerHTML="";
	function refimg(){
		var randval = Math.random();
		document.getElementById('secunum').src='http://www.51cto.com/php/seccode.php?rnum='+randval;
	}
</SCRIPT>

<SCRIPT src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/count.js"></SCRIPT>

<SCRIPT language=javascript 
src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/count.htm"></SCRIPT>

<SCRIPT src="关于Java反射机制的一个实例%20-%2051CTO_COM_files/new_art_dev.js" 
type=text/javascript></SCRIPT>
</BODY></HTML>
